"use strict";
function Dot(t, i) {
    this.ctx = t,
    this.config = i,
    this.init()
}
function Slider(t, i) {
    this.container = t,
    this.options = i,
    this.init()
}
var detail = {
    $starry: document.querySelector(".starry"),
    // 发光的小星星
    $stars: document.querySelectorAll(".starry_stars .star"),
    $dt: document.querySelector(".detail"),
    $dtTxtMain: document.querySelector(".detail_main"),
    $dtTxtItems: document.querySelectorAll(".detail_item"),
    // 底部7个文字导航父容器
    $dtMenu: document.querySelector(".detail_menu"),
    // 底部8个文字导航
    $dtMenuItems: document.querySelectorAll(".detail_menu .item"),
    // 内容下面的关闭按钮
    $dtCloses: document.querySelectorAll(".detail_close"),
    $bg: document.querySelector(".bg"),
    len: 9, // 星星的个数=弹窗的个数
    //len: 7, // 星星的个数=弹窗的个数
    dthide: !0,
    first: !0,
    init: function() {
        this.starTouch(),
        this.detailMenuTouch(),
        this.detailClose()
    },
    // 针对最后一个元素 - 高亮
    lastContentActive : function(){
      //alert('针对最后一个元素进行特殊处理');
      var item7 = document.getElementsByClassName("js_item7")[0].children[0];
      item7.style.color = '#e17808'; // #666
    },
    // 针对最后一个元素 - 非高亮
    lastContentNormal : function(){
        //alert('针对最后一个元素进行特殊处理');
        var item7 = document.getElementsByClassName("js_item7")[0].children[0];
        item7.style.color = '#666'; // #666
    },
    // 在触发小星星和底部子导航的时候，固定住底部子导航
    fixedBottomNav : function(){
        var jsBottomNavItem = document.getElementsByClassName('js_bottom_nav');
        var jsBottomNavWrap = jsBottomNavItem[0].parentNode; // 导航父元素
        jsBottomNavWrap.style.bottom = '11%';
        return jsBottomNavItem;
    },
    // 触发星星
    starTouch: function() {
        var that = this;
        //alert('starTouch');
        for (var t, i = this, e = 0; e < i.len; e++)
            i.$stars[e].addEventListener("touchstart", function() {
                t = this.dataset.id - 1;
                // 显示弹窗内容
                //alert('总共的小星星个数：'+e+'； 要是显示的弹窗内容：'+t);
                if(isNaN(t)){
                    t = 0;
                }
                i.detailShow(t);
                if(t==6){
                    that.lastContentActive();
                }
                that.fixedBottomNav();
            });
    },
    // 触发底部7个字导航
    detailMenuTouch: function() {
        var that = this;
        for (var t, i = this, e = 0; e < i.len; e++)
            i.$dtMenuItems[e].addEventListener("touchstart", function() {
                t = this.dataset.id - 1,
                //alert('触发了底部子导航 detailMenuTouch id : ' +t);
                // true : 1.显示索引的内容  2.左右滑动切换内容
                i.dthide ? i.detailShow(t) : i.detailSlider(t);
               var jsBottomNavItem = that.fixedBottomNav();
                jsBottomNavItem[jsBottomNavItem.length-1].style.color = '#e17808';
            });
    },
    // 触发弹窗内的关闭 X
    detailClose: function() {
        var that = this;
        //alert('detailClose');
        for (var t, i = this, e = 0; e < i.len; e++)
            i.$dtCloses[e].addEventListener("touchstart", function() {
                t = this.dataset.id - 1;
                i.detailHide(t);
                if(t==6){
                    that.lastContentNormal();
                }
            })
    },
    // 显示弹窗内容
    detailShow: function(t) {
        var i = this;
        i.$starry.className = "starry off",
        track.animateOut(),
        i.$bg.className = "bg on",
        i.$dt.className = "detail detail" + (t + 1) + " on",
        i.$dtMenu.className = "detail_menu detail_menu" + (t + 1),
        i.$dtTxtMain.style.webkitTransform = "translate3d(-" + 12.9186 * t + "rem,0,0)",
        setTimeout(function() {
            i.$dtTxtMain.style.webkitTransition = "all 1s"
        }, 0),
        i.detailClassAdd(t),
        i.$dtTxtItems[0].classList.add("act"),
        i.detailSlider(t),
        i.dthide = !1,
        i.slider.play(),
        pageslider.pause()
    },
    detailHide: function(t) {
        var i = this;
        i.dthide = !0;
        i.$starry.className = "starry on";
        track.animateIn();
        i.$bg.className = "bg off";
        i.$dt.className = "detail off";
        i.$dtMenu.className = "detail_menu";
        i.$dtTxtMain.style.webkitTransition = "none";
        i.detailClassAdd(t);
        //console.log('detail.detailHide() i.slider : ');
        //console.log(i.slider);
        //console.log(i.slider);
        //console.log(i.slider);
        //console.log(i.slider.pause());
        i.slider.pause();
        pageslider.play();

    },
    detailClassAdd: function(t) {
        //if(isNaN(t)){
        //    //alert('你点了第1个商城');
        //    t = 0
        //}
        for (var i = this, e = function() {
            this.classList.remove("pre"),
            this.classList.remove("cur"),
            this.classList.remove("next")
        }
        , s = 0; s < i.len; s++)
            i.$dtTxtItems[s].addEventListener("webkitAnimationEnd", e);

        i.$dtTxtItems[t].classList.add("cur"),
        0 == t ? i.$dtTxtItems[t + 1].classList.add("next") : t == i.len - 1 ? i.$dtTxtItems[t - 1].classList.add("pre") : (i.$dtTxtItems[t - 1].classList.add("pre"),
        i.$dtTxtItems[t + 1].classList.add("next"));
    },
    // 手指左右滑动
    detailSlider: function(t) {
        var i = this;
        //console.log(t);
        detail.slider ? detail.slider.slide(t) : detail.slider = new Slider(document.querySelector(".detail_main"),{
            direction: "x", // 横向滑动
            cur: t,
            onSlide: function() {
                // 最后一个
                if(this.current == 6){
                    i.lastContentActive();
                }else{
                    i.lastContentNormal();
                }
                i.$dt.className = "detail detail" + (this.current + 1) + " on",
                    // 底部7个字导航父容器，添加新的带索引的类
                    i.$dtMenu.className = "detail_menu detail_menu" + (this.current + 1);

                for (var t = function () {
                        this.classList.remove("move")
                    }
                         , e = 0; e < i.len; e++){
                    i.$dtTxtItems[e].classList.remove("act"),
                    i.dthide && !i.first || i.$dtTxtItems[e].classList.add("move"),
                        i.$dtTxtItems[e].addEventListener("webkitAnimationEnd", t);


                i.first = !1,
                    i.$dtTxtItems[this.current].classList.add("act"),
                    i.$dtTxtMain.style.webkitTransform = "translate3d(-" + 12.9186 * this.current + "rem,0,0)",
                    setTimeout(function () {
                        i.$dtTxtMain.style.webkitTransition = "all 1s";
                    }, 0);

                }
            }
        })
    }
};
detail.init(),
Dot.prototype = {
    init: function() {
        var t = this.config;
        this._x = this.x = t.x,
        this._y = this.y = t.y,
        this.rad = t.rad,
        this.parent = t.parent
    },
    draw: function() {
        var t = this.ctx
          , i = this.config;
        t.save(),
        t.globalAlpha = this.parent.opacity,
        t.fillStyle = i.color || "rgba(255, 255, 255, 1)",
        t.beginPath(),
        t.arc(this.x, this.y, i.r, 0, 2 * Math.PI, !1),
        t.closePath(),
        t.fill(),
        t.restore()
    }
};
var Circle = function(t, i) {
    this.ctx = t,
    this.config = i,
    this.init()
}
;
Circle.prototype = {
    init: function() {
        this._r = this.config.r,
        this.r = 0,
        this.rotation = 0,
        this.opacity = 0,
        this.createDots()
    },
    animateIn: function() {
        var t = this;
        TweenLite.to(t, .3, {
            delay: .5,
            r: this._r,
            opacity: .7,
            rotation: -40,
            onCompleteScope: t,
            onUpdate: function() {
                t.update(.005)
            },
            onComplete: function() {
                t.explode();
            }
        })
    },
    animateOut: function(t) {
        var i = this;
        TweenLite.to(i, .5, {
            r: 0,
            opacity: .3,
            rotation: 40,
            onStart: i.stop,
            callbackScope: i,
            onUpdate: function() {
                i.update(.005)
            },
            ease: Linear.easeNone
        })
    },
    stop: function() {
        for (var t = this.dots, i = t.length, e = 0; e < i; e++) {
            var s = t[e];
            TweenLite.killTweensOf(s)
        }
    },
    explode: function() {
        var t = this;
        this.obj;
        TweenLite.to(t, 1, {
            r: t._r + 10,
            onComplete: function() {
                t.implode()
            },
            onUpdate: function() {
                t.update()
            }
        })
    },
    implode: function() {
        var t = this;
        this.obj;
        TweenLite.to(t, 1, {
            r: t._r - 10,
            onComplete: function() {
                t.explode()
            },
            onUpdate: function() {
                t.update()
            }
        })
    },
    update: function(t) {
        for (var t = isNaN(t) ? .05 : t, i = this.dots, e = this.config.origin, s = this.r, n = 0, a = i.length; n < a; n++) {
            var o = i[n]
              , r = o.rad + this.rotation * Math.PI / 180;
            TweenLite.to(o, 1, {
                delay: n * t,
                x: Math.round(e.x + s * Math.cos(r)),
                y: Math.round(e.y + s * Math.sin(r)),
                onUpdateScope: o
            })
        }
    },
    reDraw: function() {
        for (var t = this.dots, i = 0, e = t.length; i < e; i++)
            t[i].draw()
    },
    createDots: function() {
        var t, i, e, s = this.config, n = this.config.origin, a = s.count, o = this.r;
        this.dots = [];
        for (var r = 0; r < a; r++) {
            e = 2 * r * Math.PI / a + this.rotation * Math.PI / 180,
            t = Math.round(n.x + o * Math.cos(e)),
            i = Math.round(n.y + o * Math.sin(e));
            var c = new Dot(this.ctx,{
                x: t,
                y: i,
                rad: e,
                r: 1.5,
                parent: this,
                color: "#4d4e72"
            });
            this.dots.push(c);
        }
    }
};
var track = {
    count: 3,
    circles: [],
    init: function() {
        var t, i = document.documentElement.clientWidth, e = document.documentElement.clientHeight, s = document.querySelector("#canvas");
        s.width = i,
        s.height = e,
        this.ctx = t = s.getContext("2d"),
        this.stage = s,
        this.inited = !0;
        for (var n = 1, a = this.count; n <= a; n++) {
            var o = new Circle(t,{
                origin: {
                    x: i / 2,
                    y: e / 2
                },
                r: 70 * n,
                count: 12 * n
            });
            this.circles.push(o)
        }
        this.animateIn()
    },
    animateIn: function() {
        var t = this.circles
          , i = this;
        this.isPlaying = !0;
        for (var e = 0, s = this.circles.length; e < s; e++)
            t[e].animateIn();
        TweenLite.ticker.addEventListener("tick", this.tick = function() {
            i.update()
        }
        )
    },
    animateOut: function() {
        var t = this.circles;
        this.isPlaying = !1;
        for (var i = 0, e = this.circles.length; i < e; i++)
            t[i].animateOut()
    },
    update: function() {
        this.ctx.clearRect(0, 0, this.stage.width, this.stage.height);
        for (var t = 0, i = this.circles.length; t < i; t++)
            this.circles[t].reDraw()
    }
};
document.body.addEventListener("touchmove", function(t) {
    t.preventDefault()
}),
Slider.prototype = {
    init: function() {
        if (this.children = this.container.children,
        this.total = this.children.length,
        !(this.total.length < 2)) {
            this.bindEvent(),
            this.pre = this.current = this.options.cur;
            var t = this.options.onInit;
            "function" == typeof t && t.call(this)
        }
    },
    handleEvent: function(t) {
        switch (t.type) {
        case "touchstart":
            this.onStart(t);
            break;
        case "touchmove":
            this.onMove(t);
            break;
        case "touchend":
            this.onEnd(t)
        }
    },
    bindEvent: function() {
        var t = document.body;
        t.addEventListener("touchstart", this, !1),
        t.addEventListener("touchmove", this, !1),
        t.addEventListener("touchend", this, !1)
    },
    // 手指接触
    onStart: function(t) {
        document.body;
        //console.log('onStart(t)');
        //console.log(t);
        this.startX = t.touches[0].pageX,
        this.startY = t.touches[0].pageY,
        this.isScrolling = void 0
    },
    onMove: function(t) {
        //console.log('onMove(t)');
        //console.log(t);
        var i = t.touches[0].pageX - this.startX
          , e = t.touches[0].pageY - this.startY;
        "undefined" == typeof this.isScrolling && (Math.abs(i) > 20 || Math.abs(e) > 20) && (this.isScrolling = "x" === this.options.direction ? Math.abs(e) > 20 : Math.abs(i) > 20),
        this.isScrolling && t.preventDefault()
    },
    // 为新加的最后一个标签添加动画
    addAnimateForItem7 : function(t){
        var target = t.target;
        //console.log('addAnimateForItem7 target :');
        //console.log(target);
        // http://www.xcf.cn/zhuanti/kuyu_v2/fxslt_test/index.html
        var id = target.getAttribute('attr-id');
        //console.log('onEnd(t)');
        //console.log('刚才划过的page id : ' + id); // 通过id，判断划过的是哪个page
        var jsItem7 = document.getElementsByClassName('js_item7')[0];
        if(id == 'page-id-2'){
            jsItem7.classList.add('js-item-7-animate-hide');
            jsItem7.classList.remove('js-item-7-animate-show');
            setTimeout(function(){
                jsItem7.style.display = 'none';
            },600);
        }else{
            jsItem7.classList.remove('js-item-7-animate-hide');
            jsItem7.classList.add('js-item-7-animate-show');
            setTimeout(function(){
                jsItem7.style.display = 'block';
            },0);
        }
        return id; // 返回当前的页面id
    },
    // 始终显示最后一个item，不加任何动画
    alwaysShowItem7 : function(){
        var jsItem7 = document.getElementsByClassName('js_item7')[0];
        jsItem7.classList.remove('js-item-7-animate-hide');
        jsItem7.classList.remove('js-item-7-animate-show');
        jsItem7.style.display = 'block';
    },
    // 当滑动到星星页面时，自动弹出首个专场
    autoShowFirstDetail : function(){
      $('.detail_menu').css('bottom','11%');
      setTimeout(function(){
        detail.detailShow(0); // 显示第1个专场
      },1800);
    },
    // 聚焦深港澳子导航显示隐藏动画
    focusSgaShowAndHide : function(){
       var jsSga = $('.js_sga_nav')
       return {
           show : function(){
               jsSga.css('top',0)
               setTimeout(function(){
                   jsSga.show();
               },800);
           },
           hide : function(){
               //alert('隐藏深港澳nav');
               jsSga.animate({
                   'top' : '10rem'
               },600);
               jsSga.fadeOut(400);
           }
       }
    },
    // 手指移出
    onEnd: function(t) {
        var that = this;
        //console.log('onEnd(t)');
        //console.log(t);
        //console.log('当前页面id ： '+id);
        document.body;
        if ("undefined" != typeof this.isScrolling && !this.isScrolling) {
            var i = "x" === this.options.direction ? t.changedTouches[0].pageX > this.startX ? -1 : 1 : t.changedTouches[0].pageY > this.startY ? -1 : 1;
            this.slide(this.current + i); // i = -1则往上滑，i = 1则往下滑
            //console.log('上下滑动判断 i : ');
            var id = that.addAnimateForItem7(t);
            console.log('当前page-id： ' + id + ' ; 当前方向i ： ' + i);
            var jsMyCampus = document.getElementsByClassName('js_my_campus')[0];
            if((id == 'page-id-1') && (i==(-1))) { // 最顶部页面，不能往上滑
                //alert('到了最顶部，始终显示part1，阻止滑动！！！');
                //that.myPart1FideInAnimate(); // 第1个页面淡入动画
                var jsMyPart1Wrap = document.getElementsByClassName('js_my_part1_wrap')[0];
                jsMyPart1Wrap.style.display = 'block';
                firstPageAnimateShow();
                jsMyCampus.style.background = '#03021f';
            }else if( (id == 'page-id-2') && (i==(-1)) ) {
                //that.myPart1FideInAnimate(); // 第1个页面淡入动画
                // 第一个页面显示动画
                firstPageAnimateShow();
                // 深港澳子导航隐藏
                that.focusSgaShowAndHide().hide();
            }else{
               //that.myPart1FideOutAnimate(); // 第1个页面淡出动画
                // 第一个页面隐藏动画
            }

            var jsMyCampus = document.getElementsByClassName('js_my_campus')[0]; // 最外层父容器
            var jsPage3Wrap = document.getElementsByClassName('js_page3_wrap')[0]; // 新财富学院父容器
            var jsPage4Wrap = document.getElementsByClassName('js_page4_wrap')[0]; // 投资圈父容器
            var jsPage5Wrap = document.getElementsByClassName('js_page5_wrap')[0]; // 二维码父容器
            var jsArrowDown = document.getElementsByClassName('js_arrow_down')[0]; // 向下箭头
            var jsLtycWords = document.getElementsByClassName('js_ltyc_words')[0]; // 论坛议程word
            var jsDescNotices = document.getElementsByClassName('js_desc_notices_wrap')[0]; // 论坛简介+注意事项

            jsArrowDown.style.display = 'block';
            jsMyCampus.style.background = ''; // 最外层父容器


            // 进入新财富新品，投研圈，二维码页面的交互处理
            if((id == 'page-id-2' && i == 1) ||
               (id == 'page-id-4' && i == -1)
             ){ // 新财富学院 ,往下滑

                // 隐藏第2页中，论坛议程word和论坛简介word
                ltycAndLtjjHide();
                // 第3个页面，显示新财富新品-新财富学院
                part3XcfXueYuanShow();
                // 第4个页面，隐藏投研圈
                part4TouHangHide();
                // 显示第1页
                //firstPageAnimateShow();
                jsMyCampus.style.background = '';

                // 深港澳子导航隐藏
                that.focusSgaShowAndHide().hide();

            }else if((id == 'page-id-1' && i == -1) || (id == 'page-id-2' && i == -1)){ // 首页
                jsMyCampus.style.background = '#03021f';
                // 隐藏第2页中，论坛议程word和论坛简介word
                ltycAndLtjjHide();
                // 显示首页
                firstPageAnimateShow();
            } else if(id == 'page-id-1' && i == 1){ // 从首页滑动到星星
                // 显示第2页中，论坛议程word和论坛简介word
                ltycAndLtjjShow();

                jsMyCampus.style.background = '';
                // 手指滑动到星星页面，主动触发第1个专场
                that.autoShowFirstDetail();
                firstPageAnimateHide();
                // $('.js_my_campus').css('background','#03021f');
                // 深港澳子导航显示
                that.focusSgaShowAndHide().show();

            } else if((id == 'page-id-3' && i == 1) ||
                (id == 'page-id-5' && i == -1)
            ){ // 投研圈

                part5RqCodeHide();
                // 第4个页面，显示投研圈
                part4TouHangShow();
                // 隐藏第3个页面，新财富学院
                part3XcfXueYuanHide();

                jsMyCampus.style.background = '';
            }else if((id == 'page-id-4' && i == 1)){ // 二维码
                //alert('二维码');
                //jsPage4Wrap.style.display = 'none';
                //jsPage4Wrap.classList.add('common-hide-animate1');
                jsArrowDown.style.display = 'none';
                //jsPage5Wrap.style.display = 'block'; // 二维码页面呈现
                part5RqCodeShow();
                part4TouHangHide();
                jsMyCampus.style.background = '';
            }else if((id == 'page-id-3' && i == -1)){ // 从新财富学院上滑到星星
                //alert('从新财富学院上滑到星星');
                // 显示第2页中，论坛议程word和论坛简介word
                ltycAndLtjjShow();
                // 第3个页面，隐藏新财富新品-新财富学院
                part3XcfXueYuanHide();
                jsMyCampus.style.background = '';
                // 手指滑动到星星页面，主动触发第1个专场
                that.autoShowFirstDetail();

                // 深港澳子导航显示
                that.focusSgaShowAndHide().show();

            }else if(id == 'page-id-5' && i == 1){ // 最后二维码页面
                //alert('离开了二维码页面！！');
                jsArrowDown.style.display = 'none';
                jsMyCampus.style.background = '';
            }
            //jsPage3Wrap.classList.remove('common-hide-animate');

        }else{ // 当前页面没有上下滑动
            //console.log('页面没有上下滑动了');
            if(id == 'page-id-2'){ // 如果始终在页面2上点击，则始终显示下面最后一个item
                that.alwaysShowItem7();
            }
        }
    },
    slide: function(t) {
        if (!(t > this.total - 1 || t < 0)) {
            this.pre = this.current,
            this.current = t;
            var i = this.options.onSlide;
            "function" == typeof i && i.call(this)
        }
    },
    pause: function() {
        var t = document.body;
        t.removeEventListener("touchstart", this, !1),
        t.removeEventListener("touchmove", this, !1),
        t.removeEventListener("touchend", this, !1)
    },
    play: function() {
        this.bindEvent()
    }
};
var pageslider = new Slider(document.querySelector("#campus"),{
    direction: "y", // 手指纵向滑动屏幕
    cur: 0,
    onSlide: function() {
        /*
        var t = document.querySelector(".progress")
          , i = document.querySelectorAll(".progress .step")
          , e = document.querySelector(".bg");
        1 == this.current && (track.inited ? track.animateIn() : track.init()),
        1 == this.pre && track.animateOut(),
        2 == this.current && (e.className = "bg in"),
        2 == this.pre && 1 == this.current && (e.className = "bg off"),
        this.children[this.pre].classList.add("out");
        var s = this.children[this.pre];
        setTimeout(function() {
            s.classList.remove("in")
        }, 800),
        this.children[this.current].classList.add("in"),
        this.children[this.current].classList.remove("out"),
        t.className = "progress progress" + this.current,
        this.pre <= this.current ? (i[this.current - 1].classList.remove("out"),
        i[this.current - 1].classList.add("in")) : (i[this.current].classList.remove("in"),
        i[this.current].classList.add("out"))
        */


        var t = document.querySelector(".progress")
            , i = document.querySelectorAll(".progress .step")
            , e = document.querySelector(".bg");
        1 == this.current && (track.inited ? track.animateIn() : track.init()),
        1 == this.pre && track.animateOut(),
        2 == this.current && (e.className = "bg in"),
        2 == this.pre && 1 == this.current && (e.className = "bg off"),
            this.children[this.pre].classList.add("out");
        var s = this.children[this.pre];
        setTimeout(function() {
            s.classList.remove("in")
        }, 800),
            this.children[this.current].classList.add("in"),
            this.children[this.current].classList.remove("out"),
            t.className = "progress progress" + this.current,
            this.pre <= this.current ? (i[this.current - 1].classList.remove("out"),
                i[this.current - 1].classList.add("in")) : (i[this.current].classList.remove("in"),
                i[this.current].classList.add("out"))


    }
})
  , AudioPlayer = function() {}
  , AP = {
    conf: {},
    extend: function(t, i) {
        var t = t
          , i = i;
        for (var e in i)
            t[e] = i[e];
        return t
    },
    PAUSED: 0,
    PLAYING: 1,
    construct: function(t) {
        this.conf = this.extend({
            src: null ,
            loop: "loop",
            type: "audio/mpeg",
            autoplay: !0,
            preload: !0
        }, t),
        this.init()
    },
    init: function() {
        var t = this.conf;
        this.audio || (this.audio = new Audio);
        for (key in t)
            this.audio[key] = t[key];
        this.audio.autoplay ? this.status = this.PLAYING : (this.status = this.PAUSED,
        this.paused())
    },
    togglePlay: function() {
        this.status === this.PLAYING ? this.paused() : this.play()
    },
    play: function() {
        this.status = this.PLAYING,
        this.audio && this.audio.pause(),
        this.audio && this.audio.play()
    },
    paused: function() {
        this.status = this.PAUSED,
        this.audio && this.audio.pause()
    },
    stop: function() {
        this.status = this.PAUSED,
        this.audio.currentTime = 0,
        this.paused()
    },
    setSrc: function(t, i) {
        this.audio && (this.stop(),
        this.audio.src = t,
        i && (this.audio.type = i))
    },
    getStatus: function() {
        return this.status
    },
    destroy: function() {
        this.audio.pause(),
        this.audio = null
    }
};
for (var key in AP)
    AudioPlayer.prototype[key] = AP[key];
var bgm = new AudioPlayer;
bgm.construct({
    src: "images/music.mp3",
    autoplay: !0
});
var music = {
    music: document.querySelector(".music"),
    musicOn: "music",
    musicOff: "music music_off",
    init: function() {
        var t = this;
        t.musicToggle(),
        t.music.addEventListener("touchstart", function() {
            bgm.togglePlay(),
            t.musicToggle()
        })
    },
    musicToggle: function() {
        var t = bgm.getStatus()
          , i = this;
        t ? i.music.setAttribute("class", i.musicOn) : i.music.setAttribute("class", i.musicOff)
    }
};
music.init();



// 计算